{"ast":null,"code":"var _jsxFileName = \"/Users/bobo/Documents/react-demo/my-app/src/Components/Dom/index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Dom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: new Array(20).fill('内容内容')\n    };\n\n    this.createNewData = () => {};\n\n    this.handleScroll = event => {\n      //console.log('1')\n      const totalHeight = event.target.scrollHeight; //元素高度\n\n      const scrollTop = event.target.scrollTop; //已滚动高度\n\n      const clientHeight = event.target.clientHeight; //视口高度\n      //console.log(totalHeight,scrollTop,clientHeight);\n\n      if (totalHeight - scrollTop - clientHeight < 30) {\n        console.log('需要新数据');\n      }\n    };\n  }\n\n  render() {\n    const {\n      content\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        onScroll: this.handleScroll,\n        children: content.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed\",\n        children: \"\\u6EDA\\u52A8\\u52A0\\u8F7D\\u66F4\\u591A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bobo/Documents/react-demo/my-app/src/Components/Dom/index.jsx"],"names":["React","Component","Dom","state","content","Array","fill","createNewData","handleScroll","event","totalHeight","target","scrollHeight","scrollTop","clientHeight","console","log","render","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACvCE,KADuC,GACjC;AACFC,MAAAA,OAAO,EAAC,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,MAAnB;AADN,KADiC;;AAAA,SAKvCC,aALuC,GAKzB,MAAM,CAEnB,CAPsC;;AAAA,SAQvCC,YARuC,GAQzBC,KAAD,IAAW;AACpB;AACA,YAAMC,WAAW,GAACD,KAAK,CAACE,MAAN,CAAaC,YAA/B,CAFoB,CAEwB;;AAC5C,YAAMC,SAAS,GAACJ,KAAK,CAACE,MAAN,CAAaE,SAA7B,CAHoB,CAGmB;;AACvC,YAAMC,YAAY,GAACL,KAAK,CAACE,MAAN,CAAaG,YAAhC,CAJoB,CAIyB;AAC7C;;AACA,UAAGJ,WAAW,GAACG,SAAZ,GAAsBC,YAAtB,GAAmC,EAAtC,EAAyC;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,KAjBsC;AAAA;;AAkBvCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,QAAQ,EAAE,KAAKK,YAAxC;AAAA,kBAEQJ,OAAO,CAACc,GAAR,CAAY,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACxB,8BACI;AAAA,sBAAkBD;AAAlB,aAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJD;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AApCsC","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\n\nexport default class Dom extends Component {\n    state={\n        content:new Array(20).fill('内容内容')\n    }\n\n    createNewData=() => {\n        \n    }\n    handleScroll=(event) => {\n        //console.log('1')\n        const totalHeight=event.target.scrollHeight;//元素高度\n        const scrollTop=event.target.scrollTop;//已滚动高度\n        const clientHeight=event.target.clientHeight;//视口高度\n        //console.log(totalHeight,scrollTop,clientHeight);\n        if(totalHeight-scrollTop-clientHeight<30){\n            console.log('需要新数据');\n        }\n    }\n    render() {\n        const { content } = this.state\n        return (\n            <div >\n                <div className='content' onScroll={this.handleScroll}>\n                    {\n                        content.map((item,index) => {\n                            return (\n                                <div key={index}>{item}</div>\n                            )\n                        })\n                    }\n                </div>\n                <div className='fixed'>\n                    滚动加载更多\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}