{"ast":null,"code":"var _jsxFileName = \"/Users/bobo/Documents/react-demo/my-app/src/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Components/Board';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      history: [{\n        squares: new Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n\n    this.calculateWinner = squares => {\n      const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n        }\n      }\n\n      return null;\n    };\n\n    this.handleClick = i => {\n      const {\n        xIsNext,\n        stepNumber\n      } = this.state;\n      const history = this.state.history.slice(0, stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice(); //console.log(squares);\n\n      if (this.calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = xIsNext ? 'X' : 'O'; //console.log(squares);\n\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        xIsNext: !xIsNext,\n        stepNumber: history.length\n      });\n    };\n\n    this.jumpTo = step => {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    };\n  }\n\n  render() {\n    const {\n      history,\n      stepNumber\n    } = this.state;\n    const current = history[stepNumber];\n    const winner = this.calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            return this.jumpTo(move);\n          },\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner:' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => {\n            this.handleClick(i);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bobo/Documents/react-demo/my-app/src/Game.js"],"names":["React","Component","Board","Game","state","history","squares","Array","fill","xIsNext","stepNumber","calculateWinner","lines","i","length","a","b","c","handleClick","slice","current","setState","concat","jumpTo","step","render","winner","moves","map","move","desc","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,YAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GACpC;AACJC,MAAAA,OAAO,EAAC,CAAC;AACPC,QAAAA,OAAO,EAAC,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB;AADD,OAAD,CADJ;AAIJC,MAAAA,OAAO,EAAC,IAJJ;AAKJC,MAAAA,UAAU,EAAC;AALP,KADoC;;AAAA,SAQ1CC,eAR0C,GAQzBL,OAAD,IAAa;AAC3B,YAAMM,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAUE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,cAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,YAAIP,OAAO,CAACS,CAAD,CAAP,IAAcT,OAAO,CAACS,CAAD,CAAP,KAAeT,OAAO,CAACU,CAAD,CAApC,IAA2CV,OAAO,CAACS,CAAD,CAAP,KAAeT,OAAO,CAACW,CAAD,CAArE,EAA0E;AACxE,iBAAOX,OAAO,CAACS,CAAD,CAAd;AACD;AACF;;AACH,aAAO,IAAP;AACD,KA1ByC;;AAAA,SA2B1CG,WA3B0C,GA2B7BL,CAAD,IAAO;AACjB,YAAM;AAAEJ,QAAAA,OAAF;AAAUC,QAAAA;AAAV,UAAyB,KAAKN,KAApC;AACA,YAAMC,OAAO,GAAC,KAAKD,KAAL,CAAWC,OAAX,CAAmBc,KAAnB,CAAyB,CAAzB,EAA2BT,UAAU,GAAC,CAAtC,CAAd;AACA,YAAMU,OAAO,GAACf,OAAO,CAACA,OAAO,CAACS,MAAR,GAAe,CAAhB,CAArB;AACA,YAAMR,OAAO,GAACc,OAAO,CAACd,OAAR,CAAgBa,KAAhB,EAAd,CAJiB,CAKjB;;AACA,UAAG,KAAKR,eAAL,CAAqBL,OAArB,KAA+BA,OAAO,CAACO,CAAD,CAAzC,EAA6C;AACzC;AACH;;AACDP,MAAAA,OAAO,CAACO,CAAD,CAAP,GAAWJ,OAAO,GAAC,GAAD,GAAK,GAAvB,CATiB,CAUjB;;AACA,WAAKY,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAACA,OAAO,CAACiB,MAAR,CAAe,CAAC;AAAChB,UAAAA,OAAO,EAACA;AAAT,SAAD,CAAf,CAAT;AAA6CG,QAAAA,OAAO,EAAC,CAACA,OAAtD;AAA8DC,QAAAA,UAAU,EAACL,OAAO,CAACS;AAAjF,OAAd;AACD,KAvCyC;;AAAA,SAwC1CS,MAxC0C,GAwClCC,IAAD,IAAU;AACf,WAAKH,QAAL,CAAc;AAACX,QAAAA,UAAU,EAACc,IAAZ;AAAiBf,QAAAA,OAAO,EAAEe,IAAI,GAAC,CAAN,KAAW;AAApC,OAAd;AACD,KA1CyC;AAAA;;AA2C1CC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEpB,MAAAA,OAAF;AAAUK,MAAAA;AAAV,QAAyB,KAAKN,KAApC;AACA,UAAMgB,OAAO,GAACf,OAAO,CAACK,UAAD,CAArB;AACA,UAAMgB,MAAM,GAAC,KAAKf,eAAL,CAAqBS,OAAO,CAACd,OAA7B,CAAb;AACA,UAAMqB,KAAK,GAACtB,OAAO,CAACuB,GAAR,CAAY,CAACJ,IAAD,EAAMK,IAAN,KAAe;AACrC,YAAMC,IAAI,GAACD,IAAI,GAAC,iBAAeA,IAAhB,GAAqB,kBAApC;AACA,0BAAO;AAAA,+BACL;AAAQ,UAAA,OAAO,EAAE,MAAM;AACrB,mBAAO,KAAKN,MAAL,CAAYM,IAAZ,CAAP;AACD,WAFD;AAAA,oBAEIC;AAFJ;AAAA;AAAA;AAAA;AAAA;AADK,SAASD,IAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD,KAPW,CAAZ;AAQA,QAAIE,MAAJ;;AACA,QAAGL,MAAH,EAAU;AACNK,MAAAA,MAAM,GAAG,YAAUL,MAAnB;AACH,KAFD,MAEK;AACDK,MAAAA,MAAM,GAAG,mBAAiB,KAAK3B,KAAL,CAAWK,OAAX,GAAmB,GAAnB,GAAuB,GAAxC,CAAT;AACH;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEW,OAAO,CAACd,OAAxB;AAAiC,UAAA,OAAO,EAAGO,CAAD,IAAO;AAC/C,iBAAKK,WAAL,CAAiBL,CAAjB;AACD;AAFD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAMkB;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA3EyC","sourcesContent":["import React, { Component } from 'react'\nimport Board from './Components/Board'\n\nimport './Game.css'\n\nexport default class Game extends Component {\n  state={\n    history:[{\n      squares:new Array(9).fill(null)\n    }],\n    xIsNext:true,\n    stepNumber:0\n  }\n  calculateWinner=(squares) => {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n      ];\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n        }\n      }\n    return null;\n  }\n  handleClick=(i) => {\n    const { xIsNext,stepNumber } = this.state\n    const history=this.state.history.slice(0,stepNumber+1)\n    const current=history[history.length-1]\n    const squares=current.squares.slice();\n    //console.log(squares);\n    if(this.calculateWinner(squares)||squares[i]){\n        return;\n    }\n    squares[i]=xIsNext?'X':'O';\n    //console.log(squares);\n    this.setState({history:history.concat([{squares:squares}]),xIsNext:!xIsNext,stepNumber:history.length});\n  }\n  jumpTo=(step) => {\n    this.setState({stepNumber:step,xIsNext:(step%2)===0})\n  }\n  render() {\n    \n    const { history,stepNumber } = this.state\n    const current=history[stepNumber]\n    const winner=this.calculateWinner(current.squares);\n    const moves=history.map((step,move) => {\n      const desc=move?'Go to move #'+move:'Go to game start'\n      return <li key={move}>\n        <button onClick={() => {\n          return this.jumpTo(move)\n        }}>{desc}</button>\n      </li>\n    })\n    let status;\n    if(winner){\n        status = 'Winner:'+winner;\n    }else{\n        status = 'Next player: '+(this.state.xIsNext?'X':'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} onClick={(i) => {\n            this.handleClick(i)\n          }}/>\n        </div>\n        <div className=\"game-info\">\n          <div>{status }</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}